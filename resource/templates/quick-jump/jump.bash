# Put the line below in ~/.bashrc or ~/bash_profile:
#
#   eval "$(kite jump shell bash)"
#   # set the bind func name is: j
#   eval "$(kite jump shell bash --bind j)"
#
# The following lines are autogenerated:

# hooks on dir changed
__jump_prompt_command() {
  local status=$?
  kite jump chdir --quiet && return $status
}

[[ "$PROMPT_COMMAND" =~ __jump_prompt_command ]] || {
  PROMPT_COMMAND="__jump_prompt_command;$PROMPT_COMMAND"
}

# completion func for {{bindFunc}}
# refer https://blog.csdn.net/qq_38883889/article/details/106543271
__jump_completion() {
    local IFS=$'\n'
    local commands
    # example:
    # input 'jump hi'
    # - $COMP_LINE='jump hi'
    # - $term=$keyword='hi'
    # local term="${COMP_LINE/#{{bindFunc}} /}"
    local term="${COMP_WORDS[COMP_CWORD]}"

    # simple echo.
#   echo $(kite jump hint "$term" --no-name)

#    commands="$(kite jump hint "$term" --no-name)"
#    commands=($(kite jump hint "$term" --no-name))
    commands=($(kite jump hint --no-name))

    # add log for debug
    kite util log "term:$term COMP_LINE:$COMP_LINE cmds:$commands" --type bash-jump-hint

    COMPREPLY=$commands
}

{{bindFunc}}() {
  local dir
  dir=$(kite jump get "$@")
  test -d "$dir" && cd "$dir"
}

# for use echo
#complete -o dirnames -C '__jump_completion' {{bindFunc}}
# for use COMPREPLY
complete -o dirnames -F __jump_completion {{bindFunc}}

# add alias for: kite jump
alias kj="kite jump"
